"""Add session and exercise related tables

Revision ID: ed14ac7459bf
Revises: 887c7c5ac7a9
Create Date: 2025-07-09 23:54:59.637007

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ed14ac7459bf"
down_revision: Union[str, Sequence[str], None] = "887c7c5ac7a9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    # op.drop_table('users')
    op.drop_index(op.f("ix_user_problems_id"), table_name="user_problems")
    # op.drop_table('user_problems')
    op.drop_index(op.f("ix_onboarding_id"), table_name="onboarding")
    # op.drop_table('onboarding')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "onboarding",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("primary_goal", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("pain_score", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "preferred_schedule", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("onboarding_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("onboarding_pkey")),
        sa.UniqueConstraint(
            "user_id",
            name=op.f("onboarding_user_id_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_index(op.f("ix_onboarding_id"), "onboarding", ["id"], unique=False)
    op.create_table(
        "user_problems",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("problem_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("problem_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("user_problems_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("user_problems_pkey")),
    )
    op.create_index(op.f("ix_user_problems_id"), "user_problems", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("hashed_password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("age", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("address", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "profile_picture_url", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("users_pkey")),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    # ### end Alembic commands ###
