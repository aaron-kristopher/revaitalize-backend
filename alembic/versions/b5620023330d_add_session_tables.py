"""Add session tables

Revision ID: b5620023330d
Revises: ed14ac7459bf
Create Date: 2025-07-10 00:12:56.966248

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b5620023330d'
down_revision: Union[str, Sequence[str], None] = 'ed14ac7459bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercises_id'), 'exercises', ['id'], unique=False)
    op.create_table('session_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number_of_reps', sa.Integer(), nullable=False),
    sa.Column('number_of_sets', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_requirements_exercise_id'), 'session_requirements', ['exercise_id'], unique=False)
    op.create_index(op.f('ix_session_requirements_id'), 'session_requirements', ['id'], unique=False)
    op.create_index(op.f('ix_session_requirements_user_id'), 'session_requirements', ['user_id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datetime_start', sa.DateTime(), nullable=False),
    sa.Column('datetime_end', sa.DateTime(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('session_quality_score', sa.Float(), nullable=True),
    sa.Column('error_flag', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_exercise_id'), 'sessions', ['exercise_id'], unique=False)
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.create_table('exercise_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('set_number', sa.Integer(), nullable=False),
    sa.Column('set_quality_score', sa.Float(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('error_flag', sa.String(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_sets_id'), 'exercise_sets', ['id'], unique=False)
    op.create_index(op.f('ix_exercise_sets_session_id'), 'exercise_sets', ['session_id'], unique=False)
    op.create_table('repetitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rep_number', sa.Integer(), nullable=False),
    sa.Column('rep_quality_score', sa.Float(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('error_flag', sa.String(), nullable=True),
    sa.Column('set_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['set_id'], ['exercise_sets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repetitions_id'), 'repetitions', ['id'], unique=False)
    op.create_index(op.f('ix_repetitions_set_id'), 'repetitions', ['set_id'], unique=False)
    op.alter_column('onboarding', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('onboarding_user_id_key'), 'onboarding', type_='unique')
    op.create_index(op.f('ix_onboarding_id'), 'onboarding', ['id'], unique=False)
    op.create_index(op.f('ix_onboarding_user_id'), 'onboarding', ['user_id'], unique=True)
    op.add_column('user_problems', sa.Column('exercise_id', sa.Integer(), nullable=False))
    op.alter_column('user_problems', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_user_problems_exercise_id'), 'user_problems', ['exercise_id'], unique=False)
    op.create_index(op.f('ix_user_problems_id'), 'user_problems', ['id'], unique=False)
    op.create_index(op.f('ix_user_problems_user_id'), 'user_problems', ['user_id'], unique=False)
    op.create_foreign_key(None, 'user_problems', 'exercises', ['exercise_id'], ['id'])
    op.drop_column('user_problems', 'problem_description')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.add_column('user_problems', sa.Column('problem_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_problems', type_='foreignkey')
    op.drop_index(op.f('ix_user_problems_user_id'), table_name='user_problems')
    op.drop_index(op.f('ix_user_problems_id'), table_name='user_problems')
    op.drop_index(op.f('ix_user_problems_exercise_id'), table_name='user_problems')
    op.alter_column('user_problems', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('user_problems', 'exercise_id')
    op.drop_index(op.f('ix_onboarding_user_id'), table_name='onboarding')
    op.drop_index(op.f('ix_onboarding_id'), table_name='onboarding')
    op.create_unique_constraint(op.f('onboarding_user_id_key'), 'onboarding', ['user_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('onboarding', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_repetitions_set_id'), table_name='repetitions')
    op.drop_index(op.f('ix_repetitions_id'), table_name='repetitions')
    op.drop_table('repetitions')
    op.drop_index(op.f('ix_exercise_sets_session_id'), table_name='exercise_sets')
    op.drop_index(op.f('ix_exercise_sets_id'), table_name='exercise_sets')
    op.drop_table('exercise_sets')
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_exercise_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_session_requirements_user_id'), table_name='session_requirements')
    op.drop_index(op.f('ix_session_requirements_id'), table_name='session_requirements')
    op.drop_index(op.f('ix_session_requirements_exercise_id'), table_name='session_requirements')
    op.drop_table('session_requirements')
    op.drop_index(op.f('ix_exercises_id'), table_name='exercises')
    op.drop_table('exercises')
    # ### end Alembic commands ###
